// _utilities.scss

// Opacity
.opacity-0 { opacity: 0 !important; }
.opacity-25 { opacity: 0.25 !important; }
.opacity-50 { opacity: 0.5 !important; }
.opacity-75 { opacity: 0.75 !important; }
.opacity-100 { opacity: 1 !important; }

// Overflow
.overflow-auto { overflow: auto !important; }
.overflow-hidden { overflow: hidden !important; }
.overflow-visible { overflow: visible !important; }
.overflow-scroll { overflow: scroll !important; }

.overflow-x-auto { overflow-x: auto !important; }
.overflow-x-hidden { overflow-x: hidden !important; }
.overflow-x-visible { overflow-x: visible !important; }
.overflow-x-scroll { overflow-x: scroll !important; }

.overflow-y-auto { overflow-y: auto !important; }
.overflow-y-hidden { overflow-y: hidden !important; }
.overflow-y-visible { overflow-y: visible !important; }
.overflow-y-scroll { overflow-y: scroll !important; }


// Display utilities (tiếp nối từ phần trước)
$displays: inline, inline-block, block, grid, inline-grid, table, table-row, table-cell, flex, inline-flex, none;

@each $display in $displays {
  .d-#{$display} { display: #{$display} !important; }
}

// Shadows
.shadow { box-shadow: var(--w-box-shadow) !important; }
.shadow-sm { box-shadow: var(--w-box-shadow-sm) !important; }
.shadow-lg { box-shadow: var(--w-box-shadow-lg) !important; }
.shadow-none { box-shadow: none !important; }

// Position
.position-static { position: static !important; }
.position-relative { position: relative !important; }
.position-absolute { position: absolute !important; }
.position-fixed { position: fixed !important; }
.position-sticky { position: -webkit-sticky !important; position: sticky !important; }

.top-0 { top: 0 !important; }
.top-50 { top: 50% !important; }
.top-100 { top: 100% !important; }
.bottom-0 { bottom: 0 !important; }
.bottom-50 { bottom: 50% !important; }
.bottom-100 { bottom: 100% !important; }
.start-0 { left: 0 !important; }
.start-50 { left: 50% !important; }
.start-100 { left: 100% !important; }
.end-0 { right: 0 !important; }
.end-50 { right: 50% !important; }
.end-100 { right: 100% !important; }

.translate-middle { transform: translate(-50%, -50%) !important; }
.translate-middle-x { transform: translateX(-50%) !important; }
.translate-middle-y { transform: translateY(-50%) !important; }

// Borders
.border { border: var(--w-border-width) var(--w-border-style) var(--w-border-color) !important; }
.border-0 { border: 0 !important; }
.border-top { border-top: var(--w-border-width) var(--w-border-style) var(--w-border-color) !important; }
.border-top-0 { border-top: 0 !important; }
.border-end { border-right: var(--w-border-width) var(--w-border-style) var(--w-border-color) !important; }
.border-end-0 { border-right: 0 !important; }
.border-bottom { border-bottom: var(--w-border-width) var(--w-border-style) var(--w-border-color) !important; }
.border-bottom-0 { border-bottom: 0 !important; }
.border-start { border-left: var(--w-border-width) var(--w-border-style) var(--w-border-color) !important; }
.border-start-0 { border-left: 0 !important; }

// Border colors
$border-colors: (
  "primary": var(--w-primary-rgb),
  "secondary": var(--w-secondary-rgb),
  "success": var(--w-success-rgb),
  "info": var(--w-info-rgb),
  "warning": var(--w-warning-rgb),
  "danger": var(--w-danger-rgb),
  "light": var(--w-light-rgb),
  "dark": var(--w-dark-rgb),
  "black": var(--w-black-rgb),
  "white": var(--w-white-rgb)
);

@each $color, $value in $border-colors {
  .border-#{$color} {
    --w-border-opacity: 1;
    border-color: rgba(#{$value}, var(--w-border-opacity)) !important;
  }
}

// Border subtle colors
.border-primary-subtle { border-color: var(--w-primary-border-subtle) !important; }
.border-secondary-subtle { border-color: var(--w-secondary-border-subtle) !important; }
.border-success-subtle { border-color: var(--w-success-border-subtle) !important; }
.border-info-subtle { border-color: var(--w-info-border-subtle) !important; }
.border-warning-subtle { border-color: var(--w-warning-border-subtle) !important; }
.border-danger-subtle { border-color: var(--w-danger-border-subtle) !important; }
.border-light-subtle { border-color: var(--w-light-border-subtle) !important; }
.border-dark-subtle { border-color: var(--w-dark-border-subtle) !important; }


// Border width
.border-1 { border-width: 1px !important; }
.border-2 { border-width: 2px !important; }
.border-3 { border-width: 3px !important; }
.border-4 { border-width: 4px !important; }
.border-5 { border-width: 5px !important; }

// Border opacity
.border-opacity-10 { --w-border-opacity: 0.1; }
.border-opacity-25 { --w-border-opacity: 0.25; }
.border-opacity-50 { --w-border-opacity: 0.5; }
.border-opacity-75 { --w-border-opacity: 0.75; }
.border-opacity-100 { --w-border-opacity: 1; }


// Sizing utilities
.w-25 { width: 25% !important; }
.w-50 { width: 50% !important; }
.w-75 { width: 75% !important; }
.w-100 { width: 100% !important; }
.w-auto { width: auto !important; }
.mw-100 { max-width: 100% !important; }
.vw-100 { width: 100vw !important; }
.min-vw-100 { min-width: 100vw !important; }

.h-25 { height: 25% !important; }
.h-50 { height: 50% !important; }
.h-75 { height: 75% !important; }
.h-100 { height: 100% !important; }
.h-auto { height: auto !important; }
.mh-100 { max-height: 100% !important; }
.vh-100 { height: 100vh !important; }
.min-vh-100 { min-height: 100vh !important; }


// Flex utilities
.flex-fill { flex: 1 1 auto !important; }
.flex-row { flex-direction: row !important; }
.flex-column { flex-direction: column !important; }
.flex-row-reverse { flex-direction: row-reverse !important; }
.flex-column-reverse { flex-direction: column-reverse !important; }
.flex-grow-0 { flex-grow: 0 !important; }
.flex-grow-1 { flex-grow: 1 !important; }
.flex-shrink-0 { flex-shrink: 0 !important; }
.flex-shrink-1 { flex-shrink: 1 !important; }
.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }
.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.justify-content-start { justify-content: flex-start !important; }
.justify-content-end { justify-content: flex-end !important; }
.justify-content-center { justify-content: center !important; }
.justify-content-between { justify-content: space-between !important; }
.justify-content-around { justify-content: space-around !important; }
.justify-content-evenly { justify-content: space-evenly !important; }

.align-items-start { align-items: flex-start !important; }
.align-items-end { align-items: flex-end !important; }
.align-items-center { align-items: center !important; }
.align-items-baseline { align-items: baseline !important; }
.align-items-stretch { align-items: stretch !important; }

.align-content-start { align-content: flex-start !important; }
.align-content-end { align-content: flex-end !important; }
.align-content-center { align-content: center !important; }
.align-content-between { align-content: space-between !important; }
.align-content-around { align-content: space-around !important; }
.align-content-stretch { align-content: stretch !important; }

.align-self-auto { align-self: auto !important; }
.align-self-start { align-self: flex-start !important; }
.align-self-end { align-self: flex-end !important; }
.align-self-center { align-self: center !important; }
.align-self-baseline { align-self: baseline !important; }
.align-self-stretch { align-self: stretch !important; }

.order-first { order: -1 !important; }
.order-0 { order: 0 !important; }
.order-1 { order: 1 !important; }
.order-2 { order: 2 !important; }
.order-3 { order: 3 !important; }
.order-4 { order: 4 !important; }
.order-5 { order: 5 !important; }
.order-last { order: 6 !important; }

// Spacing utilities (margin, padding)
$spacers: (
  0: 0,
  1: 0.25rem,
  2: 0.5rem,
  3: 1rem,
  4: 1.5rem,
  5: 3rem
); // Giả sử các giá trị này, điều chỉnh nếu cần

$sides: (
  "": "",
  "t": "-top",
  "b": "-bottom",
  "s": "-left", // start
  "e": "-right", // end
  "x": "-left" "-right", // SCSS không hỗ trợ trực tiếp kiểu này, cần tách
  "y": "-top" "-bottom"  // SCSS không hỗ trợ trực tiếp kiểu này, cần tách
);

@each $size, $length in $spacers {
  // Margin
  .m-#{$size} { margin: #{$length} !important; }
  .mt-#{$size} { margin-top: #{$length} !important; }
  .me-#{$size} { margin-right: #{$length} !important; }
  .mb-#{$size} { margin-bottom: #{$length} !important; }
  .ms-#{$size} { margin-left: #{$length} !important; }
  .mx-#{$size} { margin-left: #{$length} !important; margin-right: #{$length} !important; }
  .my-#{$size} { margin-top: #{$length} !important; margin-bottom: #{$length} !important; }

  // Padding
  .p-#{$size} { padding: #{$length} !important; }
  .pt-#{$size} { padding-top: #{$length} !important; }
  .pe-#{$size} { padding-right: #{$length} !important; }
  .pb-#{$size} { padding-bottom: #{$length} !important; }
  .ps-#{$size} { padding-left: #{$length} !important; }
  .px-#{$size} { padding-left: #{$length} !important; padding-right: #{$length} !important; }
  .py-#{$size} { padding-top: #{$length} !important; padding-bottom: #{$length} !important; }
}
.m-auto { margin: auto !important; }
.mx-auto { margin-left: auto !important; margin-right: auto !important; }
.my-auto { margin-top: auto !important; margin-bottom: auto !important; }
.mt-auto { margin-top: auto !important; }
.me-auto { margin-right: auto !important; }
.mb-auto { margin-bottom: auto !important; }
.ms-auto { margin-left: auto !important; }


// Gap utilities
@each $size, $length in $spacers {
  .gap-#{$size} { gap: #{$length} !important; }
  .row-gap-#{$size} { row-gap: #{$length} !important; }
  .column-gap-#{$size} { column-gap: #{$length} !important; -moz-column-gap: #{$length} !important; }
}

// Text utilities
.font-monospace { font-family: var(--w-font-monospace) !important; }

.fs-1 { font-size: calc(1.375rem + 1.5vw) !important; }
.fs-2 { font-size: calc(1.325rem + 0.9vw) !important; }
.fs-3 { font-size: calc(1.3rem + 0.6vw) !important; }
.fs-4 { font-size: calc(1.275rem + 0.3vw) !important; }
.fs-5 { font-size: 1.25rem !important; }
.fs-6 { font-size: 1rem !important; }
@media (min-width: 1200px) { // Ghi đè cho màn hình lớn hơn
    .fs-1 { font-size: 2.5rem !important; }
    .fs-2 { font-size: 2rem !important; }
    .fs-3 { font-size: 1.75rem !important; }
    .fs-4 { font-size: 1.5rem !important; }
}


.fst-italic { font-style: italic !important; }
.fst-normal { font-style: normal !important; }

.fw-lighter { font-weight: lighter !important; }
.fw-light { font-weight: 300 !important; }
.fw-normal { font-weight: 400 !important; }
.fw-medium { font-weight: 500 !important; }
.fw-semibold { font-weight: 600 !important; }
.fw-bold { font-weight: 700 !important; }
.fw-bolder { font-weight: bolder !important; }

.lh-1 { line-height: 1 !important; }
.lh-sm { line-height: 1.25 !important; }
.lh-base { line-height: 1.5 !important; }
.lh-lg { line-height: 2 !important; }

.text-start { text-align: left !important; }
.text-end { text-align: right !important; }
.text-center { text-align: center !important; }

.text-decoration-none { text-decoration: none !important; }
.text-decoration-underline { text-decoration: underline !important; }
.text-decoration-line-through { text-decoration: line-through !important; }

.text-lowercase { text-transform: lowercase !important; }
.text-uppercase { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

.text-wrap { white-space: normal !important; }
.text-nowrap { white-space: nowrap !important; }
.text-break { word-wrap: break-word !important; word-break: break-word !important; }

.text-shadow { text-shadow: 0 0 3px rgba(0, 0, 0, .75) !important; }

// Text colors
$text-colors: (
  "primary": var(--w-primary-rgb),
  "secondary": var(--w-secondary-rgb),
  "success": var(--w-success-rgb),
  "info": var(--w-info-rgb),
  "warning": var(--w-warning-rgb),
  "danger": var(--w-danger-rgb),
  "light": var(--w-light-rgb),
  "dark": var(--w-dark-rgb),
  "black": var(--w-black-rgb),
  "white": var(--w-white-rgb),
  "body": var(--w-body-color-rgb)
);

@each $color, $value in $text-colors {
  .text-#{$color} {
    --w-text-opacity: 1;
    color: rgba(#{$value}, var(--w-text-opacity)) !important;
  }
}
.text-muted { --w-text-opacity: 1; color: var(--w-secondary-color) !important; } // From original
.text-black-50 { --w-text-opacity: 1; color: rgba(0, 0, 0, .5) !important; }
.text-white-50 { --w-text-opacity: 1; color: rgba(255, 255, 255, .5) !important; }
.text-body-secondary { --w-text-opacity: 1; color: var(--w-secondary-color) !important; }
.text-body-tertiary { --w-text-opacity: 1; color: var(--w-tertiary-color) !important; }
.text-body-emphasis { --w-text-opacity: 1; color: var(--w-emphasis-color) !important; }
.text-reset { --w-text-opacity: 1; color: inherit !important; }

// Text opacity
.text-opacity-25 { --w-text-opacity: .25; }
.text-opacity-50 { --w-text-opacity: .5; }
.text-opacity-75 { --w-text-opacity: .75; }
.text-opacity-100 { --w-text-opacity: 1; }

// Text emphasis colors
.text-primary-emphasis { color: var(--w-primary-text-emphasis) !important; }
.text-secondary-emphasis { color: var(--w-secondary-text-emphasis) !important; }
.text-success-emphasis { color: var(--w-success-text-emphasis) !important; }
.text-info-emphasis { color: var(--w-info-text-emphasis) !important; }
.text-warning-emphasis { color: var(--w-warning-text-emphasis) !important; }
.text-danger-emphasis { color: var(--w-danger-text-emphasis) !important; }
.text-light-emphasis { color: var(--w-light-text-emphasis) !important; }
.text-dark-emphasis { color: var(--w-dark-text-emphasis) !important; }


// Link utilities
$link-colors: $text-colors; // Reuse text colors for links

@each $color, $value in $link-colors {
    @if not ($color == "black" or $color == "white" or $color == "body") { // Bootstrap link colors
        .link-#{$color} {
            color: RGBA(#{$value}, var(--w-link-opacity, 1)) !important;
            text-decoration-color: RGBA(#{$value}, var(--w-link-underline-opacity, 1)) !important; // SCSS requires interpolation
            &:hover, &:focus { // Define hover/focus. Need to calculate a darker/lighter shade or use pre-defined hover vars
                 // For simplicity, this example doesn't calculate shades.
                 // In a real setup, you'd use color functions or specific hover variables.
                color: RGBA(#{$value}, var(--w-link-opacity, 1)) !important; // Placeholder
                text-decoration-color: RGBA(#{$value}, var(--w-link-underline-opacity, 1)) !important; // Placeholder
            }
        }
         .link-underline-#{$color} {
            --w-link-underline-opacity: 1;
            text-decoration-color: rgba(#{$value}, var(--w-link-underline-opacity)) !important;
        }
    }
}
// Specific link hover from original file
.link-primary:focus, .link-primary:hover { color: RGBA(10, 88, 202, var(--w-link-opacity, 1)) !important; text-decoration-color: RGBA(10, 88, 202, var(--w-link-underline-opacity, 1)) !important;}
.link-secondary:focus, .link-secondary:hover { color: RGBA(86, 94, 100, var(--w-link-opacity, 1)) !important; text-decoration-color: RGBA(86, 94, 100, var(--w-link-underline-opacity, 1)) !important;}
.link-success:focus, .link-success:hover { color: RGBA(20, 108, 67, var(--w-link-opacity, 1)) !important; text-decoration-color: RGBA(20, 108, 67, var(--w-link-underline-opacity, 1)) !important;}
.link-info:focus, .link-info:hover { color: RGBA(61, 213, 243, var(--w-link-opacity, 1)) !important; text-decoration-color: RGBA(61, 213, 243, var(--w-link-underline-opacity, 1)) !important;}
.link-warning:focus, .link-warning:hover { color: RGBA(255, 205, 57, var(--w-link-opacity, 1)) !important; text-decoration-color: RGBA(255, 205, 57, var(--w-link-underline-opacity, 1)) !important;}
.link-danger:focus, .link-danger:hover { color: RGBA(176, 42, 55, var(--w-link-opacity, 1)) !important; text-decoration-color: RGBA(176, 42, 55, var(--w-link-underline-opacity, 1)) !important;}
.link-light:focus, .link-light:hover { color: RGBA(249, 250, 251, var(--w-link-opacity, 1)) !important; text-decoration-color: RGBA(249, 250, 251, var(--w-link-underline-opacity, 1)) !important;}
.link-dark:focus, .link-dark:hover { color: RGBA(26, 30, 33, var(--w-link-opacity, 1)) !important; text-decoration-color: RGBA(26, 30, 33, var(--w-link-underline-opacity, 1)) !important;}

.link-body-emphasis {
    color: RGBA(var(--w-emphasis-color-rgb), var(--w-link-opacity, 1)) !important;
    text-decoration-color: RGBA(var(--w-emphasis-color-rgb), var(--w-link-underline-opacity, 1)) !important;
    &:hover, &:focus {
        color: RGBA(var(--w-emphasis-color-rgb), var(--w-link-opacity, .75)) !important;
        text-decoration-color: RGBA(var(--w-emphasis-color-rgb), var(--w-link-underline-opacity, .75)) !important;
    }
}

.link-opacity-10 { --w-link-opacity: .1; }
.link-opacity-10-hover:hover { --w-link-opacity: .1; }
.link-opacity-25 { --w-link-opacity: .25; }
.link-opacity-25-hover:hover { --w-link-opacity: .25; }
.link-opacity-50 { --w-link-opacity: .5; }
.link-opacity-50-hover:hover { --w-link-opacity: .5; }
.link-opacity-75 { --w-link-opacity: .75; }
.link-opacity-75-hover:hover { --w-link-opacity: .75; }
.link-opacity-100 { --w-link-opacity: 1; }
.link-opacity-100-hover:hover { --w-link-opacity: 1; }

.link-offset-1 { text-underline-offset: .125em !important; }
.link-offset-1-hover:hover { text-underline-offset: .125em !important; }
.link-offset-2 { text-underline-offset: .25em !important; }
.link-offset-2-hover:hover { text-underline-offset: .25em !important; }
.link-offset-3 { text-underline-offset: .375em !important; }
.link-offset-3-hover:hover { text-underline-offset: .375em !important; }

.link-underline {
  --w-link-underline-opacity: 1;
  text-decoration-color: rgba(var(--w-link-color-rgb), var(--w-link-underline-opacity, 1)) !important;
}
.link-underline-opacity-0 { --w-link-underline-opacity: 0; }
.link-underline-opacity-0-hover:hover { --w-link-underline-opacity: 0; }
.link-underline-opacity-10 { --w-link-underline-opacity: .1; }
.link-underline-opacity-10-hover:hover { --w-link-underline-opacity: .1; }
.link-underline-opacity-25 { --w-link-underline-opacity: .25; }
.link-underline-opacity-25-hover:hover { --w-link-underline-opacity: .25; }
.link-underline-opacity-50 { --w-link-underline-opacity: .5; }
.link-underline-opacity-50-hover:hover { --w-link-underline-opacity: .5; }
.link-underline-opacity-75 { --w-link-underline-opacity: .75; }
.link-underline-opacity-75-hover:hover { --w-link-underline-opacity: .75; }
.link-underline-opacity-100 { --w-link-underline-opacity: 1; }
.link-underline-opacity-100-hover:hover { --w-link-underline-opacity: 1; }


// Background utilities
$bg-colors: $text-colors; // Reuse color map

@each $color, $value in $bg-colors {
  .bg-#{$color} {
    --w-bg-opacity: 1;
    background-color: rgba(#{$value}, var(--w-bg-opacity)) !important;
  }
}
.bg-body { --w-bg-opacity: 1; background-color: rgba(var(--w-body-bg-rgb), var(--w-bg-opacity)) !important; }
.bg-transparent { --w-bg-opacity: 1; background-color: transparent !important; }
.bg-body-secondary { --w-bg-opacity: 1; background-color: rgba(var(--w-secondary-bg-rgb), var(--w-bg-opacity)) !important; }
.bg-body-tertiary { --w-bg-opacity: 1; background-color: rgba(var(--w-tertiary-bg-rgb), var(--w-bg-opacity)) !important; }

.bg-opacity-10 { --w-bg-opacity: .1; }
.bg-opacity-25 { --w-bg-opacity: .25; }
.bg-opacity-50 { --w-bg-opacity: .5; }
.bg-opacity-75 { --w-bg-opacity: .75; }
.bg-opacity-100 { --w-bg-opacity: 1; }

.bg-primary-subtle { background-color: var(--w-primary-bg-subtle) !important; }
.bg-secondary-subtle { background-color: var(--w-secondary-bg-subtle) !important; }
.bg-success-subtle { background-color: var(--w-success-bg-subtle) !important; }
.bg-info-subtle { background-color: var(--w-info-bg-subtle) !important; }
.bg-warning-subtle { background-color: var(--w-warning-bg-subtle) !important; }
.bg-danger-subtle { background-color: var(--w-danger-bg-subtle) !important; }
.bg-light-subtle { background-color: var(--w-light-bg-subtle) !important; }
.bg-dark-subtle { background-color: var(--w-dark-bg-subtle) !important; }

.bg-gradient { background-image: var(--w-gradient) !important; }

// text-bg- Mấy cái này nên gộp chung với backgrounds hoặc text
.text-bg-primary { color: #fff !important; background-color: RGBA(var(--w-primary-rgb), var(--w-bg-opacity, 1)) !important; }
.text-bg-secondary { color: #fff !important; background-color: RGBA(var(--w-secondary-rgb), var(--w-bg-opacity, 1)) !important; }
.text-bg-success { color: #fff !important; background-color: RGBA(var(--w-success-rgb), var(--w-bg-opacity, 1)) !important; }
.text-bg-info { color: #000 !important; background-color: RGBA(var(--w-info-rgb), var(--w-bg-opacity, 1)) !important; }
.text-bg-warning { color: #000 !important; background-color: RGBA(var(--w-warning-rgb), var(--w-bg-opacity, 1)) !important; }
.text-bg-danger { color: #fff !important; background-color: RGBA(var(--w-danger-rgb), var(--w-bg-opacity, 1)) !important; }
.text-bg-light { color: #000 !important; background-color: RGBA(var(--w-light-rgb), var(--w-bg-opacity, 1)) !important; }
.text-bg-dark { color: #fff !important; background-color: RGBA(var(--w-dark-rgb), var(--w-bg-opacity, 1)) !important; }


// User select
.user-select-all { user-select: all !important; -webkit-user-select: all !important; -moz-user-select: all !important; }
.user-select-auto { user-select: auto !important; -webkit-user-select: auto !important; -moz-user-select: auto !important; }
.user-select-none { user-select: none !important; -webkit-user-select: none !important; -moz-user-select: none !important; }

// Pointer events
.pe-none { pointer-events: none !important; }
.pe-auto { pointer-events: auto !important; }

// Rounded corners
.rounded { border-radius: var(--w-border-radius) !important; }
.rounded-0 { border-radius: 0 !important; }
.rounded-1 { border-radius: var(--w-border-radius-sm) !important; }
.rounded-2 { border-radius: var(--w-border-radius) !important; } // Default
.rounded-3 { border-radius: var(--w-border-radius-lg) !important; }
.rounded-4 { border-radius: var(--w-border-radius-xl) !important; }
.rounded-5 { border-radius: var(--w-border-radius-xxl) !important; }
.rounded-circle { border-radius: 50% !important; }
.rounded-pill { border-radius: var(--w-border-radius-pill) !important; }

.rounded-top { border-top-left-radius: var(--w-border-radius) !important; border-top-right-radius: var(--w-border-radius) !important; }
.rounded-top-0 { border-top-left-radius: 0 !important; border-top-right-radius: 0 !important; }
.rounded-top-1 { border-top-left-radius: var(--w-border-radius-sm) !important; border-top-right-radius: var(--w-border-radius-sm) !important; }
.rounded-top-2 { border-top-left-radius: var(--w-border-radius) !important; border-top-right-radius: var(--w-border-radius) !important; }
.rounded-top-3 { border-top-left-radius: var(--w-border-radius-lg) !important; border-top-right-radius: var(--w-border-radius-lg) !important; }
.rounded-top-4 { border-top-left-radius: var(--w-border-radius-xl) !important; border-top-right-radius: var(--w-border-radius-xl) !important; }
.rounded-top-5 { border-top-left-radius: var(--w-border-radius-xxl) !important; border-top-right-radius: var(--w-border-radius-xxl) !important; }
.rounded-top-circle { border-top-left-radius: 50% !important; border-top-right-radius: 50% !important; }
.rounded-top-pill { border-top-left-radius: var(--w-border-radius-pill) !important; border-top-right-radius: var(--w-border-radius-pill) !important; }

.rounded-end { border-top-right-radius: var(--w-border-radius) !important; border-bottom-right-radius: var(--w-border-radius) !important; }
.rounded-end-0 { border-top-right-radius: 0 !important; border-bottom-right-radius: 0 !important; }
.rounded-end-1 { border-top-right-radius: var(--w-border-radius-sm) !important; border-bottom-right-radius: var(--w-border-radius-sm) !important; }
.rounded-end-2 { border-top-right-radius: var(--w-border-radius) !important; border-bottom-right-radius: var(--w-border-radius) !important; }
.rounded-end-3 { border-top-right-radius: var(--w-border-radius-lg) !important; border-bottom-right-radius: var(--w-border-radius-lg) !important; }
.rounded-end-4 { border-top-right-radius: var(--w-border-radius-xl) !important; border-bottom-right-radius: var(--w-border-radius-xl) !important; }
.rounded-end-5 { border-top-right-radius: var(--w-border-radius-xxl) !important; border-bottom-right-radius: var(--w-border-radius-xxl) !important; }
.rounded-end-circle { border-top-right-radius: 50% !important; border-bottom-right-radius: 50% !important; }
.rounded-end-pill { border-top-right-radius: var(--w-border-radius-pill) !important; border-bottom-right-radius: var(--w-border-radius-pill) !important; }

.rounded-bottom { border-bottom-right-radius: var(--w-border-radius) !important; border-bottom-left-radius: var(--w-border-radius) !important; }
.rounded-bottom-0 { border-bottom-right-radius: 0 !important; border-bottom-left-radius: 0 !important; }
.rounded-bottom-1 { border-bottom-right-radius: var(--w-border-radius-sm) !important; border-bottom-left-radius: var(--w-border-radius-sm) !important; }
.rounded-bottom-2 { border-bottom-right-radius: var(--w-border-radius) !important; border-bottom-left-radius: var(--w-border-radius) !important; }
.rounded-bottom-3 { border-bottom-right-radius: var(--w-border-radius-lg) !important; border-bottom-left-radius: var(--w-border-radius-lg) !important; }
.rounded-bottom-4 { border-bottom-right-radius: var(--w-border-radius-xl) !important; border-bottom-left-radius: var(--w-border-radius-xl) !important; }
.rounded-bottom-5 { border-bottom-right-radius: var(--w-border-radius-xxl) !important; border-bottom-left-radius: var(--w-border-radius-xxl) !important; }
.rounded-bottom-circle { border-bottom-right-radius: 50% !important; border-bottom-left-radius: 50% !important; }
.rounded-bottom-pill { border-bottom-right-radius: var(--w-border-radius-pill) !important; border-bottom-left-radius: var(--w-border-radius-pill) !important; }

.rounded-start { border-bottom-left-radius: var(--w-border-radius) !important; border-top-left-radius: var(--w-border-radius) !important; }
.rounded-start-0 { border-bottom-left-radius: 0 !important; border-top-left-radius: 0 !important; }
.rounded-start-1 { border-bottom-left-radius: var(--w-border-radius-sm) !important; border-top-left-radius: var(--w-border-radius-sm) !important; }
.rounded-start-2 { border-bottom-left-radius: var(--w-border-radius) !important; border-top-left-radius: var(--w-border-radius) !important; }
.rounded-start-3 { border-bottom-left-radius: var(--w-border-radius-lg) !important; border-top-left-radius: var(--w-border-radius-lg) !important; }
.rounded-start-4 { border-bottom-left-radius: var(--w-border-radius-xl) !important; border-top-left-radius: var(--w-border-radius-xl) !important; }
.rounded-start-5 { border-bottom-left-radius: var(--w-border-radius-xxl) !important; border-top-left-radius: var(--w-border-radius-xxl) !important; }
.rounded-start-circle { border-bottom-left-radius: 50% !important; border-top-left-radius: 50% !important; }
.rounded-start-pill { border-bottom-left-radius: var(--w-border-radius-pill) !important; border-top-left-radius: var(--w-border-radius-pill) !important; }


// Visibility
.visible { visibility: visible !important; }
.invisible { visibility: hidden !important; }

// Z-index
.z-n1 { z-index: -1 !important; }
.z-0 { z-index: 0 !important; }
.z-1 { z-index: 1 !important; }
.z-2 { z-index: 2 !important; }
.z-3 { z-index: 3 !important; }


// Responsive utilities for float, object-fit, display, flex, spacing, text-align, etc.
// SCSS loop to generate responsive utilities
$grid-breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
) !default; // Đảm bảo biến này được định nghĩa

@each $breakpoint-name, $breakpoint-value in $grid-breakpoints {
    @media (min-width: #{$breakpoint-value}) {
        // Float
        .float-#{$breakpoint-name}-start { float: left !important; }
        .float-#{$breakpoint-name}-end { float: right !important; }
        .float-#{$breakpoint-name}-none { float: none !important; }

        // Object Fit
        .object-fit-#{$breakpoint-name}-contain { object-fit: contain !important; }
        .object-fit-#{$breakpoint-name}-cover { object-fit: cover !important; }
        .object-fit-#{$breakpoint-name}-fill { object-fit: fill !important; }
        .object-fit-#{$breakpoint-name}-scale { object-fit: scale-down !important; }
        .object-fit-#{$breakpoint-name}-none { object-fit: none !important; }

        // Display
        @each $display in $displays {
            .d-#{$breakpoint-name}-#{$display} { display: #{$display} !important; }
        }

        // Flex
        .flex-#{$breakpoint-name}-fill { flex: 1 1 auto !important; }
        .flex-#{$breakpoint-name}-row { flex-direction: row !important; }
        .flex-#{$breakpoint-name}-column { flex-direction: column !important; }
        .flex-#{$breakpoint-name}-row-reverse { flex-direction: row-reverse !important; }
        .flex-#{$breakpoint-name}-column-reverse { flex-direction: column-reverse !important; }
        .flex-#{$breakpoint-name}-grow-0 { flex-grow: 0 !important; }
        .flex-#{$breakpoint-name}-grow-1 { flex-grow: 1 !important; }
        .flex-#{$breakpoint-name}-shrink-0 { flex-shrink: 0 !important; }
        .flex-#{$breakpoint-name}-shrink-1 { flex-shrink: 1 !important; }
        .flex-#{$breakpoint-name}-wrap { flex-wrap: wrap !important; }
        .flex-#{$breakpoint-name}-nowrap { flex-wrap: nowrap !important; }
        .flex-#{$breakpoint-name}-wrap-reverse { flex-wrap: wrap-reverse !important; }

        .justify-content-#{$breakpoint-name}-start { justify-content: flex-start !important; }
        .justify-content-#{$breakpoint-name}-end { justify-content: flex-end !important; }
        .justify-content-#{$breakpoint-name}-center { justify-content: center !important; }
        .justify-content-#{$breakpoint-name}-between { justify-content: space-between !important; }
        .justify-content-#{$breakpoint-name}-around { justify-content: space-around !important; }
        .justify-content-#{$breakpoint-name}-evenly { justify-content: space-evenly !important; }

        .align-items-#{$breakpoint-name}-start { align-items: flex-start !important; }
        .align-items-#{$breakpoint-name}-end { align-items: flex-end !important; }
        .align-items-#{$breakpoint-name}-center { align-items: center !important; }
        .align-items-#{$breakpoint-name}-baseline { align-items: baseline !important; }
        .align-items-#{$breakpoint-name}-stretch { align-items: stretch !important; }

        .align-content-#{$breakpoint-name}-start { align-content: flex-start !important; }
        .align-content-#{$breakpoint-name}-end { align-content: flex-end !important; }
        .align-content-#{$breakpoint-name}-center { align-content: center !important; }
        .align-content-#{$breakpoint-name}-between { align-content: space-between !important; }
        .align-content-#{$breakpoint-name}-around { align-content: space-around !important; }
        .align-content-#{$breakpoint-name}-stretch { align-content: stretch !important; }

        .align-self-#{$breakpoint-name}-auto { align-self: auto !important; }
        .align-self-#{$breakpoint-name}-start { align-self: flex-start !important; }
        .align-self-#{$breakpoint-name}-end { align-self: flex-end !important; }
        .align-self-#{$breakpoint-name}-center { align-self: center !important; }
        .align-self-#{$breakpoint-name}-baseline { align-self: baseline !important; }
        .align-self-#{$breakpoint-name}-stretch { align-self: stretch !important; }

        .order-#{$breakpoint-name}-first { order: -1 !important; }
        .order-#{$breakpoint-name}-0 { order: 0 !important; }
        .order-#{$breakpoint-name}-1 { order: 1 !important; }
        .order-#{$breakpoint-name}-2 { order: 2 !important; }
        .order-#{$breakpoint-name}-3 { order: 3 !important; }
        .order-#{$breakpoint-name}-4 { order: 4 !important; }
        .order-#{$breakpoint-name}-5 { order: 5 !important; }
        .order-#{$breakpoint-name}-last { order: 6 !important; }

        // Spacing (margin, padding)
        @each $size, $length in $spacers {
            .m-#{$breakpoint-name}-#{$size} { margin: #{$length} !important; }
            .mt-#{$breakpoint-name}-#{$size} { margin-top: #{$length} !important; }
            .me-#{$breakpoint-name}-#{$size} { margin-right: #{$length} !important; }
            .mb-#{$breakpoint-name}-#{$size} { margin-bottom: #{$length} !important; }
            .ms-#{$breakpoint-name}-#{$size} { margin-left: #{$length} !important; }
            .mx-#{$breakpoint-name}-#{$size} { margin-left: #{$length} !important; margin-right: #{$length} !important; }
            .my-#{$breakpoint-name}-#{$size} { margin-top: #{$length} !important; margin-bottom: #{$length} !important; }

            .p-#{$breakpoint-name}-#{$size} { padding: #{$length} !important; }
            .pt-#{$breakpoint-name}-#{$size} { padding-top: #{$length} !important; }
            .pe-#{$breakpoint-name}-#{$size} { padding-right: #{$length} !important; }
            .pb-#{$breakpoint-name}-#{$size} { padding-bottom: #{$length} !important; }
            .ps-#{$breakpoint-name}-#{$size} { padding-left: #{$length} !important; }
            .px-#{$breakpoint-name}-#{$size} { padding-left: #{$length} !important; padding-right: #{$length} !important; }
            .py-#{$breakpoint-name}-#{$size} { padding-top: #{$length} !important; padding-bottom: #{$length} !important; }
        }
        .m-#{$breakpoint-name}-auto { margin: auto !important; }
        .mx-#{$breakpoint-name}-auto { margin-left: auto !important; margin-right: auto !important; }
        .my-#{$breakpoint-name}-auto { margin-top: auto !important; margin-bottom: auto !important; }
        .mt-#{$breakpoint-name}-auto { margin-top: auto !important; }
        .me-#{$breakpoint-name}-auto { margin-right: auto !important; }
        .mb-#{$breakpoint-name}-auto { margin-bottom: auto !important; }
        .ms-#{$breakpoint-name}-auto { margin-left: auto !important; }

        // Gap
         @each $size, $length in $spacers {
            .gap-#{$breakpoint-name}-#{$size} { gap: #{$length} !important; }
            .row-gap-#{$breakpoint-name}-#{$size} { row-gap: #{$length} !important; }
            .column-gap-#{$breakpoint-name}-#{$size} { column-gap: #{$length} !important; -moz-column-gap: #{$length} !important; }
        }

        // Text align
        .text-#{$breakpoint-name}-start { text-align: left !important; }
        .text-#{$breakpoint-name}-end { text-align: right !important; }
        .text-#{$breakpoint-name}-center { text-align: center !important; }
    }
}

// Sticky positions
.sticky-top { position: -webkit-sticky; position: sticky; top: 0; z-index: 1020; }
.sticky-bottom { position: -webkit-sticky; position: sticky; bottom: 0; z-index: 1020; }

@each $breakpoint-name, $breakpoint-value in $grid-breakpoints {
     @media (min-width: #{$breakpoint-value}) {
        .sticky-#{$breakpoint-name}-top { position: -webkit-sticky; position: sticky; top: 0; z-index: 1020; }
        .sticky-#{$breakpoint-name}-bottom { position: -webkit-sticky; position: sticky; bottom: 0; z-index: 1020; }
    }
}

// Stacks
.hstack {
  display: flex;
  flex-direction: row;
  align-items: center;
  align-self: stretch;
}

.vstack {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  align-self: stretch;
}